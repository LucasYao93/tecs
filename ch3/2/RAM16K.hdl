// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/2/RAM16K.hdl

/**
 * Memory of 16K registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM16K[address(t)](t)
 *     Write: If load(t-1) then RAM16K[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */


CHIP RAM16K {

    IN  in[16], load, address[14];
    OUT out[16];

    PARTS:
     DMux(in=load,sel=address[13],a=x1,b=x2);
    
    DMux(in=x1,sel=address[12],a=y1,b=y2);
    DMux(in=x2,sel=address[12],a=y3,b=y4);
      
    RAM4K(in=in,load=y1,address=address[0..11],out=p1);
    RAM4K(in=in,load=y2,address=address[0..11],out=p2);
    RAM4K(in=in,load=y3,address=address[0..11],out=p3);
    RAM4K(in=in,load=y4,address=address[0..11],out=p4);
    
    Mux16(a=p1,b=p2,sel=address[12],out=q1);
    Mux16(a=p3,b=p4,sel=address[12],out=q2);
    
    Mux16(a=q1,b=q2,sel=address[13],out=out);
}
